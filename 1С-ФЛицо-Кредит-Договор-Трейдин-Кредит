Перем ТекущаяВалютаДокумента Экспорт; // Текущая валюта документа
Перем Права;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

//функция возвращает только рубли без копеек (с учетом того, что число уже округлено ЧДЦ=2
Функция ТолькоРуб(Число)
	//Число1 = Формат(Число, "ЧЦ=10; ЧДЦ=2");
	//Если ЗначениеЗаполнено(Число1) Тогда
	//	Возврат Лев(Число1, СтрДлина(Число1) - 3);
	//Иначе
	//	Возврат 0;
	//КонецЕсли;
	Возврат Цел(Число);
КонецФункции

//функция возвращает только копейки (с учетом того, что число уже округлено ЧДЦ=2
Функция ТолькоКоп(Число)
	Число1 = Формат(Число, "ЧЦ=10; ЧДЦ=2");
	Если ЗначениеЗаполнено(Число1) Тогда
		Возврат Прав(Число1, 2);
	Иначе
		Возврат "00";
	КонецЕсли;
	
КонецФункции

//Функция возвращает Фамилию и инициалы
Функция ФамилияИО(Контрагент)
	ФамилияИнициалы = СокрЛП(Контрагент.Фамилия) + " " + Лев(СокрЛП(Контрагент.Имя), 1) + "." + Лев(СокрЛП(Контрагент.Отчество), 1) + "."; 
	Возврат ФамилияИнициалы; 	
КонецФункции

//Функция возвращает Фамилию и инициалы от целой строки
Функция ФамилияИОотСтроки(Строка)
	Строка1 = СокрЛП(Строка);
	НомерПробела = Найти(Строка1, " ");
	Фамилия = СокрЛП(Лев(Строка1, НомерПробела-1));
	Строка1 = СокрЛП(Прав(Строка1,СтрДлина(Строка1)-НомерПробела+1)); 
	НомерПробела = Найти(Строка1, " ");
	Если НомерПробела = 0 Тогда //указана Фамилия И.О.
		ФамилияИнициалы = Фамилия + " " + Строка1;	
	Иначе
		Имя = СокрЛП(Лев(Строка1, НомерПробела-1));
		Отчество = СокрЛП(Прав(Строка1,СтрДлина(Строка1)-НомерПробела+1)); 
		ФамилияИнициалы = Фамилия + " " + Лев(Имя, 1) + "." + Лев(Отчество, 1) + "."; 
	КонецЕсли;
	Возврат ФамилияИнициалы; 	
КонецФункции


Функция Печать(СсылкаДляПечати, КоличествоЭкземпляров = 0, НаПринтер = Ложь, Документ = Неопределено) Экспорт
	СсылкаНаОбъект = СсылкаДляПечати.Ссылка;
	
	ТабДокумент = ПечатьДКППолнаяОплата();
	Возврат ТабДокумент;
	
КонецФункции

// Функция печати договора купли-продажи на автомобиль
Функция ПечатьДКППолнаяОплата() 
	ТабДокумент = Новый ТабличныйДокумент;
	ДокументОбъект = СсылкаНаОбъект.ПолучитьОбъект();
	//валюта печати
	ВалютаПечатногоДокумента = зфВыборВалютыПечатногоДокумента(ДокументОбъект);
	Если ВалютаПечатногоДокумента = Неопределено Тогда Возврат Неопределено; КонецЕсли;
	
	//НомерДляПечати = дкПолучитьНомерДляПечати(СсылкаНаОбъект);
	НомерДляПечати = СокрЛП(СсылкаНаОбъект.ДоговорВзаиморасчетов.НомерДоговора);
	Дата = СсылкаНаОбъект.Дата;
	Заказчик = СсылкаНаОбъект.Заказчик;
	Организация = СсылкаНаОбъект.Организация;
	
	//макет
	Макет = ПолучитьМакет("Договор");
	//заголовок документа
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета1 = Макет.ПолучитьОбласть("Подвал");
	ДоговорСтарыйАвто = ДоговорСтарыйАвто;
	Если ЗначениеЗаполнено(НомерДляПечати) Тогда
		ОбластьМакета.Параметры.НомерДоговора = НомерДляПечати;
	Иначе
		ОбластьМакета.Параметры.НомерДоговора = "________";
	КонецЕсли;
	
	//   Автомобиль трейд-ин считываем по введенному ВИНу	
	VINТрейдин=СокрЛП(обПолучитьЗначениеСвойства(СсылкаНаОбъект, "VIN ТС, сдающегося в трейд-ин"));
	Попытка
		АвтоТрейдин=Справочники.Автомобили.НайтиПоРеквизиту("VIN",VINТрейдин);
	Исключение
		Предупреждение("Данный VIN ТС не найдено, введите другой VIN для автомобиля, купленного у покупателя. VIN можно указать в доп.свойствах документа реализации ",240,"ОШИБКА");
		Сообщить("VIN можно указать в доп.свойствах документа реализации");
		//Возврат ТабДокумент;
		Возврат "";
	КонецПопытки;
	
	//описание трейд-ин авто
	
	ОбластьМакета.Параметры.Покупатель = спПолучитьНаименование(Заказчик);
	ОбластьМакета.Параметры.ДатаПередачиАвтоТрейдин = СокрЛП(обПолучитьЗначениеСвойства(СсылкаНаОбъект, "Дата передачи ТС покупателем по программе трейд-ин"));
	ГодВыпускаТрейдин = Формат(АвтоТрейдин.ГодВыпуска, "ДФ = гггг");
	ОбластьМакета.Параметры.ГодВыпускаТрейдин = ГодВыпускаТрейдин; 
	МаркаТрейдин = СокрЛП(обПолучитьЗначениеСвойства(АвтоТрейдин, "Марка"));
			Если ЗначениеЗаполнено(МаркаТрейдин) и МаркаТрейдин<>"" Тогда
				ОбластьМакета.Параметры.МаркаТрейдин = МаркаТрейдин;
			Иначе 
				Если ЗначениеЗаполнено(АвтоТрейдин.Модель.Родитель.Артикул) и АвтоТрейдин.Модель.Родитель.Артикул<>"" Тогда
					ОбластьМакета.Параметры.МаркаТрейдин = СокрЛП(АвтоТрейдин.Модель.Родитель.Артикул);
				Иначе
					ОбластьМакета.Параметры.МаркаТрейдин = СокрЛП(АвтоТрейдин.Модель.Родитель);
				КонецЕсли;		
			КонецЕсли;
	ОбластьМакета.Параметры.МодельТрейдин = СокрЛП(АвтоТрейдин.Модель);
	ОбластьМакета.Параметры.VINТрейдин = VINТрейдин;
	ОбластьМакета.Параметры.ГосНомерТрейдин = СокрЛП(Справочники.Автомобили.ЧтениеЗначенияРегистраСведения(АвтоТрейдин, Перечисления.ДополнительнаяИнформацияАвтомобилей.ГосНомер,СсылкаНаОбъект.Дата));
		
	ОбластьМакета.Параметры.НомерКузоваПТСТрейдин = СокрЛП(АвтоТрейдин.НомерКузова); 
	ОбластьМакета.Параметры.НомерШассиПТСТрейдин = СокрЛП(АвтоТрейдин.НомерШасси); 
	Если ЗначениеЗаполнено(АвтоТрейдин.ВариантКомплектации) Тогда
		ОбластьМакета.Параметры.ТипКузоваТСТрейдин = СокрЛП(АвтоТрейдин.ВариантКомплектации.ТипКузова);	
	Иначе
		ОбластьМакета.Параметры.ТипКузоваТСТрейдин = СокрЛП(АвтоТрейдин.ТипКузова);
	КонецЕсли; 
	ОбластьМакета.Параметры.ЦветКузоваПТСТрейдин = СокрЛП(АвтоТрейдин.Цвет); 
	//  запрос ПТС по трейд-ину
	ПТСТрейдин =  спПолучитьПодтверждающийДокументОбъектаПоВиду(АвтоТрейдин, Перечисления.ВидыДокументов.ПТС);
			Если ЗначениеЗаполнено(ПТСТрейдин) Тогда
				ОбластьМакета.Параметры.ПТСТрейдин = ПТСТрейдин;
				ОбластьМакета.Параметры.ПТСКемВыданТрейдин = ПТСТрейдин.КемВыдан;
//				ОбластьМакета.Параметры.ПТСГодВыдачи = ПТС.ДатаВыдачи;
			Иначе
				ОбластьМакета.Параметры.ПТСТрейдин = "Отсутствует";
//				ОбластьМакета.Параметры.ПТСГодВыдачи = "_______________";
				ОбластьМакета.Параметры.ПТСКемВыданТрейдин = "_________________" 
			КонецЕсли;
	ОбластьМакета.Параметры.ПробегТрейдин = СокрЛП(Справочники.Автомобили.ЧтениеЗначенияРегистраСведения(АвтоТрейдин, Перечисления.ДополнительнаяИнформацияАвтомобилей.Пробег,СсылкаНаОбъект.Дата));		
	ОбластьМакета.Параметры.ВозрастАвтоТрейдин = Формат((Дата - АвтоТрейдин.ГодВыпуска)/31536000,"ЧДЦ=0"); 		
	ОбластьМакета.Параметры.КоличествоВладельцевТрейдин = СокрЛП(обПолучитьЗначениеСвойства(АвтоТрейдин, "Количество владельцев по ПТС"));		
	ОбластьМакета.Параметры.ДатаДоговораПродажаТрейдин = СокрЛП(обПолучитьЗначениеСвойства(СсылкаНаОбъект, "Дата договора по приобретению ТС у покупателя")); 		
	
	//     описание цен на авто
	
	ОбластьМакета.Параметры.РозничнаяЦенаАвтоТрейдин =
	ОбластьМакета.Параметры.РозничнаяЦенаАвтоТрейдинПрописью =
	ОбластьМакета.Параметры.РозничнаяЦенаАвтоТрейдинНДС =
	ОбластьМакета.Параметры.РозничнаяЦенаАвтоТрейдинНДСПрописью =
	ОбластьМакета.Параметры.ЦенаАвтоТрейдин = 
	ОбластьМакета.Параметры.ЦенаАвтоТрейдинПрописью = 
	ОбластьМакета.Параметры.ЦенаАвтоТрейдинНДС = 
	ОбластьМакета.Параметры.ЦенаАвтоТрейдинНДСПрописью = 
	ОбластьМакета.Параметры.
	
	ОбластьМакета.Параметры.ДатаДоговора = Формат(Дата,"ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры.ЭкологическийКлассДвигателяПТС = "Евро-5";                                                                  		                                      
	ОбластьМакета.Параметры.ПредставлениеОрганизацииПолное = спПолучитьНаименование(Организация);
	ОбластьМакета1.Параметры.ПредставлениеОрганизации = Организация.Наименование;	
	ОбластьМакета.Параметры.ФирмаАдрес = киПолучитьПредставлениеКИ(Организация,Справочники.ВидыКонтактнойИнформации.АдресЮридический);
	
	//    руководитель
	Руководитель = дкОтветственноеЛицо(ДокументОбъект,Перечисления.ВидыОбъектовСведений.Руководитель);
	РуководительРП = СокрЛП(обПолучитьЗначениеСвойства(СсылкаНаОбъект.Организация, "Директор в договоре"));
	ОбластьМакета.Параметры.РуководительПредставлениеРП = РуководительРП;	//Дегтярева Владимира Александровича
	ОбластьМакета1.Параметры.РуководительФамилияИнициалы = ФамилияИОотСтроки(Руководитель.РуководительПредставление);	//"Дегтярев В.А."
	// заказчик
	ОбластьМакета.Параметры.ЗаказчикПолноеНаименование = спПолучитьНаименование(Заказчик);
	ОбластьМакета1.Параметры.ЗаказчикПолноеНаименование = спПолучитьНаименование(Заказчик);
	Адрес = киПолучитьПредставлениеКИ(Заказчик,Справочники.ВидыКонтактнойИнформации.АдресПочтовый);
	                                          
	Если Не ЗначениеЗаполнено(Адрес) Тогда
		Адрес = киПолучитьПредставлениеКИ(Заказчик,Справочники.ВидыКонтактнойИнформации.АдресФактический);
	КонецЕсли;
	Если ЗначениеЗаполнено(Адрес) Тогда
		ОбластьМакета1.Параметры.ЗаказчикПочтовыйАдрес = Адрес;
		ОбластьМакета.Параметры.ЗаказчикПочтовыйАдрес = Адрес;
	Иначе
		ОбластьМакета1.Параметры.ЗаказчикПочтовыйАдрес = "________________________________";
		ОбластьМакета.Параметры.ЗаказчикПочтовыйАдрес = "________________________________";
	КонецЕсли;	
	Тел = киПолучитьПредставлениеКИ(Заказчик,Справочники.ВидыКонтактнойИнформации.ТелефонКонтактный);
	Если Не ЗначениеЗаполнено(Тел) Тогда
		Тел = киПолучитьПредставлениеКИ(Заказчик,Справочники.ВидыКонтактнойИнформации.ТелефонСотовый);
	КонецЕсли;
	Если ЗначениеЗаполнено(Тел) Тогда
		ОбластьМакета1.Параметры.ЗаказчикТелефоны = Тел;
		ОбластьМакета.Параметры.ЗаказчикТелефоны = Тел;
	Иначе
		ОбластьМакета1.Параметры.ЗаказчикТелефоны = "_________________";
		ОбластьМакета.Параметры.ЗаказчикТелефоны = "_________________";
	КонецЕсли;	
	
	ЗаказчикДатаРождения = Формат(Заказчик.ДатаРождения,"ДФ=dd.MM.yyyy");
	Если ЗначениеЗаполнено(ЗаказчикДатаРождения) Тогда
		ОбластьМакета1.Параметры.ЗаказчикДатаРождения = ЗаказчикДатаРождения;
		//ОбластьМакета.Параметры.ЗаказчикДатаРождения = ЗаказчикДатаРождения;
	Иначе
		ОбластьМакета1.Параметры.ЗаказчикДатаРождения = "_____________";
		//ОбластьМакета.Параметры.ЗаказчикДатаРождения = "_____________";
	КонецЕсли;
	
	//  Паспорт ф.лицо заказчик
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПодтверждающиеДокументы.Ссылка КАК Документ,
	|	ПодтверждающиеДокументы.КемВыдан КАК ДокументКемВыдан,
	|	ПодтверждающиеДокументы.ДатаВыдачи КАК ДокументДатаВыдачи,
	|	ПодтверждающиеДокументы.ВидПодтверждающегоДокумента КАК ВидДокумента,
	|	ПодтверждающиеДокументы.Серия КАК Серия,
	|	ПодтверждающиеДокументы.Номер КАК Номер
	|ИЗ
	|	Справочник.ПодтверждающиеДокументы КАК ПодтверждающиеДокументы
	|ГДЕ
	|	ПодтверждающиеДокументы.Владелец = &Владелец
	|	И ПодтверждающиеДокументы.Текущий = ИСТИНА";
	Запрос.УстановитьПараметр("Владелец", Заказчик);		
	ВыборкаДокументов = Запрос.Выполнить().Выбрать();
	Если ВыборкаДокументов.Количество()=0 Тогда
		ОбластьМакета1.Параметры.ЗаказчикДокументСерия = "_______";
		ОбластьМакета1.Параметры.ЗаказчикДокументНомер = "__________";
		ОбластьМакета1.Параметры.ЗаказчикДокументКемВыдан = "__________________________";
		ОбластьМакета1.Параметры.ЗаказчикДокументДатаВыдачи = "___________";
		ОбластьМакета.Параметры.ЗаказчикДокументСерия = "_______";
		ОбластьМакета.Параметры.ЗаказчикДокументНомер = "__________";
		ОбластьМакета.Параметры.ЗаказчикДокументКемВыдан = "__________________________";
		ОбластьМакета.Параметры.ЗаказчикДокументДатаВыдачи = "___________";

		//ОбластьМакета.Параметры.ЗаказчикДокументКодПодразделения = "________";
	Иначе 
		ВыборкаДокументов.Следующий();
		ОбластьМакета1.Параметры.ЗаказчикДокументСерия = СокрЛП(ВыборкаДокументов.Серия);
		ОбластьМакета1.Параметры.ЗаказчикДокументНомер = СокрЛП(ВыборкаДокументов.Номер);
		ОбластьМакета1.Параметры.ЗаказчикДокументКемВыдан = СокрЛП(ВыборкаДокументов.ДокументКемВыдан);
		ОбластьМакета1.Параметры.ЗаказчикДокументДатаВыдачи = Формат(ВыборкаДокументов.ДокументДатаВыдачи,"ДЛФ=ДД");
		ОбластьМакета.Параметры.ЗаказчикДокументСерия = СокрЛП(ВыборкаДокументов.Серия);
		ОбластьМакета.Параметры.ЗаказчикДокументНомер = СокрЛП(ВыборкаДокументов.Номер);
		ОбластьМакета.Параметры.ЗаказчикДокументКемВыдан = СокрЛП(ВыборкаДокументов.ДокументКемВыдан);
		ОбластьМакета.Параметры.ЗаказчикДокументДатаВыдачи = Формат(ВыборкаДокументов.ДокументДатаВыдачи,"ДЛФ=ДД");
		//ОбластьМакета.Параметры.ЗаказчикДокументКодПодразделения = "________";
	КонецЕсли;
	
	//      информация по автомобилю
	
	ТаблицаАвтомобилей = СсылкаНаОбъект.Автомобили.Выгрузить();
	ТаблицаТоваров = СсылкаНаОбъект.Товары.Выгрузить();
	
	//ОбщаяСтоимостьАВтомобиля = 0;
	Если ТаблицаАвтомобилей.Количество() > 0 Тогда
		//СписокБазовыхОпций = "";
		Для каждого СтрокаАвтомобиль Из ТаблицаАвтомобилей Цикл
			//******
			СуммаВсегоНаАвтомобиль = СтрокаАвтомобиль.СуммаВсего;
			СуммаСкидкиНаценкиНаАвтомобиль = СтрокаАвтомобиль.СуммаСкидки;
			ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
			//ОбщаяСумма = СуммаВсегоНаАвтомобиль + СуммаСкидкиНаценкиНаАвтомобил
			
			//********
			Автомобиль = СтрокаАвтомобиль.Автомобиль;
			Марка = СокрЛП(обПолучитьЗначениеСвойства(Автомобиль, "Марка"));
			Если ЗначениеЗаполнено(Марка) и Марка<>"" Тогда
				ОбластьМакета.Параметры.Марка = Марка;
			Иначе 
				ОбластьМакета.Параметры.Марка = СокрЛП(Автомобиль.Модель.Родитель);
			КонецЕсли;
			ОбластьМакета.Параметры.Модель = СокрЛП(Автомобиль.Модель);
			ОбластьМакета.Параметры.Версия = СокрЛП(Автомобиль.ВариантКомплектации);
			ОбластьМакета.Параметры.VIN = СокрЛП(Автомобиль.VIN);
			//ОбластьМакета.Параметры.ТипДвигателя = СокрЛП(обПолучитьЗначениеСвойства(СсылкаНаОбъект.Автомобили, "ТипДвигателя"));
			ОбластьМакета.Параметры.ГодВыпуска = Формат(Автомобиль.ГодВыпуска, "ДФ = гггг");
			//ОбластьМакета.Параметры.МодельДвигателяПТС = СокрЛП(СсылкаНаОбъект.Автомобиль.ТипДвигателя);
			ОбластьМакета.Параметры.НомерДвигателяПТС = СокрЛП(Автомобиль.НомерДвигателя);
			ОбластьМакета.Параметры.НомерШассиПТС = СокрЛП(Автомобиль.НомерШасси);
			ОбластьМакета.Параметры.НомерКузоваПТС = СокрЛП(Автомобиль.НомерКузова);
			ОбластьМакета.Параметры.ЦветКузоваПТС = СокрЛП(Автомобиль.Цвет);
			
			Если ЗначениеЗаполнено(Автомобиль.ВариантКомплектации) Тогда
				ОбластьМакета.Параметры.ТипКузоваТС = СокрЛП(Автомобиль.ВариантКомплектации.ТипКузова);	
			Иначе
				ОбластьМакета.Параметры.ТипКузоваТС = СокрЛП(Автомобиль.ТипКузова);
			КонецЕсли;
			//    запрос ПТС
			ПТС =  спПолучитьПодтверждающийДокументОбъектаПоВиду(Автомобиль, Перечисления.ВидыДокументов.ПТС);
			Если ЗначениеЗаполнено(ПТС) Тогда
				ОбластьМакета.Параметры.ПТС = ПТС;
				ОбластьМакета.Параметры.ПТСКемВыдан = ПТС.КемВыдан;
//				ОбластьМакета.Параметры.ПТСГодВыдачи = ПТС.ДатаВыдачи;
			Иначе
				ОбластьМакета.Параметры.ПТС = "Отсутствует";
//				ОбластьМакета.Параметры.ПТСГодВыдачи = "_______________";
				ОбластьМакета.Параметры.ПТСКемВыдан = "_________________" 
			КонецЕсли;					
			//******
			СуммаАвтоработКомплект = 0;
					
			Запрос = Новый Запрос;
			Запрос.Текст = 
		"ВЫБРАТЬ 
		|	ЗаказНарядРаботы.Работа,
		|	ЗаказНарядРаботы.СуммаВсего
		|ИЗ
		|	Документ.ЗаказНаряд.Работы КАК ЗаказНарядРаботы
		|ГДЕ
		|	ЗаказНарядРаботы.Ссылка.ВидРемонта = &ВидРемонта
		|	И ЗаказНарядРаботы.Ссылка.Состояние = &Состояние
		|	И ЗаказНарядРаботы.Ссылка.Автомобиль = &Автомобиль";
	
	Запрос.УстановитьПараметр("Автомобиль", СтрокаАвтомобиль.Автомобиль);
	Запрос.УстановитьПараметр("ВидРемонта", Справочники.ВидыРемонта.НайтиПоКоду();
	Запрос.УстановитьПараметр("Состояние", Справочники.ВидыСостоянийЗаказНарядов.Закрыт);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	
						
			СуммаАвторабот = 0;
			Запрос = Новый Запрос("ВЫБРАТЬ
			                      |	ЗаказНарядРаботы.Работа.Ссылка КАК Работа,
			                      |	ЗаказНарядРаботы.Сумма КАК СуммаВсего
			                      |ИЗ
			                      |	Документ.ЗаказНаряд.Работы КАК ЗаказНарядРаботы
			                      |ГДЕ
			                      |	ЗаказНарядРаботы.Ссылка.Автомобиль = &Автомобиль
			                      |	И ЗаказНарядРаботы.Ссылка.ВидРемонта = &ВидРемонта
			                      |	И ЗаказНарядРаботы.Ссылка.Состояние = &Состояние");
			Запрос.УстановитьПараметр("Автомобиль",СтрокаАвтомобиль.Автомобиль);
			Запрос.УстановитьПараметр("ВидРемонта",Справочники.ВидыРемонта.НайтиПоКоду("ЦБ000009"));
			Запрос.УстановитьПараметр("Состояние",Справочники.ВидыСостоянийЗаказНарядов.Закрыт);
			
			РезультатЗапроса = Запрос.Выполнить().Выгрузить();
			СтоимостьАвторабот = РезультатЗапроса.Итог("СуммаВсего");
			СтоимостьТоваров  = ТаблицаТоваров.Итог("СуммаВсего");
			// Запись цен 
			ЦенаАвто = СсылкаНаОбъект.СуммаДокумента;
			ПервоначальныйВзнос=СокрЛП(обПолучитьЗначениеСвойства(СсылкаНаОбъект, "Первоначальный взнос"));
			ПервоначальныйВзносНДС=ПервоначальныйВзнос*0.18;
			ЦенаАвтоОстаток=ЦенаАвто-ПервоначальныйВзнос;
			ЦенаАвтоОстатокНДС=ЦенаАвтоОстаток*0.18;
			Если ЗначениеЗаполнено(ПервоначальныйВзнос) и ПервоначальныйВзнос<>0  Тогда
				ОбластьМакета.Параметры.ПервоначальныйВзносНДС = ПервоначальныйВзносНДС;
				ОбластьМакета.Параметры.ПервоначальныйВзносПрописью = обЧислоПрописью(ПервоначальныйВзнос,ВалютаПечатногоДокумента);
				ОбластьМакета.Параметры.ПервоначальныйВзносНДСПрописью = обЧислоПрописью(ПервоначальныйВзносНДС,ВалютаПечатногоДокумента);
				ОбластьМакета.Параметры.ЦенаАвтоОстаток = ЦенаАвтоОстаток;
				ОбластьМакета.Параметры.ЦенаАвтоОстатокПрописью = обЧислоПрописью(ЦенаАвтоОстаток,ВалютаПечатногоДокумента);
				ОбластьМакета.Параметры.ЦенаАвтоОстатокНДС = ЦенаАвтоОстатокНДС;
				ОбластьМакета.Параметры.ЦенаАвтоОстатокНДСПрописью = обЧислоПрописью(ЦенаАвтоОстатокНДС,ВалютаПечатногоДокумента);
				ОбластьМакета.Параметры.ЦенаАвтоОстаток = обПересчет(ЦенаАвтоОстаток,ВалютаДокумента,Дата,ВалютаПечатногоДокумента,Дата,РежимОкругления.Окр15как20);
				ОбластьМакета.Параметры.ПервоначальныйВзнос = обПересчет(ПервоначальныйВзнос,ВалютаДокумента,Дата,ВалютаПечатногоДокумента,Дата,РежимОкругления.Окр15как20);
			Иначе 
				ОбластьМакета.Параметры.ПервоначальныйВзнос = "______________________________";
				ОбластьМакета.Параметры.ПервоначальныйВзносНДС = "______________________________";
				ОбластьМакета.Параметры.ПервоначальныйВзносПрописью = "______________________________";
				ОбластьМакета.Параметры.ПервоначальныйВзносНДСПрописью = "______________________________";
				ОбластьМакета.Параметры.ЦенаАвтоОстаток = "______________________________";
				ОбластьМакета.Параметры.ЦенаАвтоОстатокПрописью = "______________________________";
				ОбластьМакета.Параметры.ЦенаАвтоОстатокНДС = "______________________________";
				ОбластьМакета.Параметры.ЦенаАвтоОстатокПрописьюНДС = "______________________________";
			КонецЕсли;
			//  что такое обПересчет
			ОбластьМакета.Параметры.ЦенаАвто = обПересчет(ЦенаАвто,ВалютаДокумента,Дата,ВалютаПечатногоДокумента,Дата,РежимОкругления.Окр15как20); 			
			
			
			Банк=СокрЛП(обПолучитьЗначениеСвойства(СсылкаНаОбъект, "Банк"));
			Если Банк<>"" Тогда
				ОбластьМакета.Параметры.Банк = Банк;
			Иначе
				ОбластьМакета.Параметры.Банк = "________________"
			КонецЕсли;
			
			
			
						//			Если Скидка = 0 Тогда
//				ОбластьМакета.Параметры.Скидка = "-";
//			иначе
//				ОбластьМакета.Параметры.Скидка = Скидка;
//			КонецЕсли; 
			
//						Если не ЗначениеЗаполнено(Резина) Тогда
//				ОбластьМакета.Параметры.Резина = "-";
//			иначе
//				ОбластьМакета.Параметры.Резина = Резина;
//			КонецЕсли;
			СтоимостьСУчетомСкидок = ЦенаАвто ;
//			ОбластьМакета.Параметры.СтоимостьСУчетомСкидок = обПересчет(СтоимостьСУчетомСкидок,ВалютаДокумента,Дата,ВалютаПечатногоДокумента,Дата,РежимОкругления.Окр15как20);
//			Если СтоимостьТоваров = 0 тогда
//				ОбластьМакета.Параметры.СтоимостьДопОб = "-"; 
//			иначе
//				ОбластьМакета.Параметры.СтоимостьДопОб = СтоимостьТоваров+СтоимостьАвторабот; 
//			конецЕсли;
			ИтоговаяСтоимость = ЦенаАвто + СтоимостьТоваров+СтоимостьАвторабот;
//			ОбластьМакета.Параметры.ИтоговаяСтоимость = обПересчет(ИтоговаяСтоимость,ВалютаДокумента,Дата,ВалютаПечатногоДокумента,Дата,РежимОкругления.Окр15как20); 
			//******
			
//			ОбластьМакета.Параметры.ЦенаАвто = ЦенаАвто;
			ОбластьМакета.Параметры.ЦенаАвтоНДС = ЦенаАвто*0.18;
			//СуммаНДСНаАвтомобиль = СуммаНДСНаАвтомобиль + ТаблицаТоваров.Итог("СуммаНДС");
			////СуммаНДСНаАвтомобиль = СуммаНДСНаАвтомобиль + СсылкаНаОбъект.Опции.Итог("СуммаНДС") + СсылкаНаОбъект.Товары.Итог("СуммаНДС");	
			//СуммаНДСНаАвтомобильПечать = обПересчет(СуммаНДСНаАвтомобиль,ВалютаДокумента,Дата,ВалютаПечатногоДокумента,Дата,РежимОкругления.Окр15как20);
			//ОбластьМакета.Параметры.СуммаНДСруб 		= ТолькоРуб(СуммаНДСНаАвтомобильПечать);
			//ОбластьМакета.Параметры.СуммаНДСкоп 		= ТолькоКоп(СуммаНДСНаАвтомобильПечать);	
			//ОбластьМакета.Параметры.СуммаНДСПрописью 	= обЧислоПрописью(СуммаНДСНаАвтомобильПечать,ВалютаПечатногоДокумента);
			Автомобиль=СтрокаАвтомобиль.Автомобиль;
		КонецЦикла;
	КонецЕсли;
	
	//ОбластьМакета.Параметры.ЦенаАвтоРублей 		= ТолькоРуб(СуммаВсегоНаАвтомобильПечать);
		
	ДнейНаОплатуАвто = СокрЛП(обПолучитьЗначениеСвойства(СсылкаНаОбъект, "Дней на оплату авто после подписания договора"));
	ДнейНаПередачуАвтоПродавцом = СокрЛП(обПолучитьЗначениеСвойства(СсылкаНаОбъект, "Дней на передачу авто после полной оплаты авто"));
	ГарантияЛакокрасочногоПокрытияЛет = СокрЛП(обПолучитьЗначениеСвойства(Автомобиль.Модель, "Гарантия лакокрасочного покрытия кузова(лет)"));
	ГарантияНаОтсутствиеСквознойКоррозииЛет = СокрЛП(обПолучитьЗначениеСвойства(Автомобиль.Модель, "Гарантия на отсутствие сквозной коррозии(лет)"));
	ТранзитныеНомера =  СокрЛП(обПолучитьЗначениеСвойства(Автомобиль, "Транзитные номера"));
	ИмпортерАдрес = СокрЛП(обПолучитьЗначениеСвойства(Автомобиль.Модель, "Адрес поставщика"));
	ГарантияОригинальныхЗапчастейМесяцев = СокрЛП(Автомобиль.Модель.СрокГарантии);
	ИмпортерФирма = СокрЛП(Автомобиль.Модель.Производитель);
	МестоВыдачи = киПолучитьПредставлениеКИ(Организация,Справочники.ВидыКонтактнойИнформации.АдресЮридический);
	
	Если ЗначениеЗаполнено(ДнейНаОплатуАвто) и ДнейНаОплатуАвто<>"0" Тогда
		ОбластьМакета.Параметры.ДнейНаОплатуАвто = ДнейНаОплатуАвто;
	Иначе
		ОбластьМакета.Параметры.ДнейНаОплатуАвто = "____________________________";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДнейНаПередачуАвтоПродавцом) и ДнейНаПередачуАвтоПродавцом<>"0" Тогда
		ОбластьМакета.Параметры.ДнейНаПередачуАвтоПродавцом = ДнейНаПередачуАвтоПродавцом;
	Иначе
		ОбластьМакета.Параметры.ДнейНаПередачуАвтоПродавцом = "____________________________";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ГарантияЛакокрасочногоПокрытияЛет) и ГарантияЛакокрасочногоПокрытияЛет<>"0"  Тогда
		ОбластьМакета.Параметры.ГарантияЛакокрасочногоПокрытияЛет = ГарантияЛакокрасочногоПокрытияЛет;
	Иначе
		ОбластьМакета.Параметры.ГарантияЛакокрасочногоПокрытияЛет = "____________________________";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ГарантияНаОтсутствиеСквознойКоррозииЛет) и ГарантияНаОтсутствиеСквознойКоррозииЛет<>"0" Тогда
		ОбластьМакета.Параметры.ГарантияНаОтсутствиеСквознойКоррозииЛет = ГарантияНаОтсутствиеСквознойКоррозииЛет;
	Иначе
		ОбластьМакета.Параметры.ГарантияНаОтсутствиеСквознойКоррозииЛет = "____________________________";
	КонецЕсли;

//	Если ЗначениеЗаполнено(ТранзитныеНомера) Тогда
//		ОбластьМакета.Параметры.ТранзитныеНомера = ТранзитныеНомера;
//	Иначе
//		ОбластьМакета.Параметры.ТранзитныеНомера = "                        ";
//	КонецЕсли;

	Если ЗначениеЗаполнено(ИмпортерАдрес) Тогда
		ОбластьМакета.Параметры.ИмпортерАдрес = ИмпортерАдрес;
	Иначе
		ОбластьМакета.Параметры.ИмпортерАдрес = "____________________________";
	КонецЕсли;

	Если ЗначениеЗаполнено(ГарантияОригинальныхЗапчастейМесяцев) и ГарантияОригинальныхЗапчастейМесяцев<>"0" Тогда
		ОбластьМакета.Параметры.ГарантияОригинальныхЗапчастейМесяцев = ГарантияОригинальныхЗапчастейМесяцев;
	Иначе
		ОбластьМакета.Параметры.ГарантияОригинальныхЗапчастейМесяцев = "____________________________";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмпортерФирма) и ИмпортерФирма<>"" Тогда
		ОбластьМакета.Параметры.ИмпортерФирма = ИмпортерФирма;
	Иначе
		ОбластьМакета.Параметры.ИмпортерФирма = СокрЛП(Автомобиль.Поставщик);
	КонецЕсли;
	
	//Если ЗначениеЗаполнено(МестоВыдачи) Тогда
	//	ОбластьМакета.Параметры.МестоВыдачи = МестоВыдачи;
	//Иначе
	//	ОбластьМакета.Параметры.МестоВыдачи = "____________________________";
	//КонецЕсли;
	
	ОбластьМакета1.Параметры.ИННКПП 					= СокрЛП(Организация.ИНН) + "/" + СокрЛП(Организация.КПП);
	ОбластьМакета1.Параметры.НомерСчетаПолучателя	= ДокументОбъект.Организация.ОсновнойБанковскийСчет.НомерСчета;
	ОбластьМакета1.Параметры.БанкПолучателя			= ДокументОбъект.Организация.ОсновнойБанковскийСчет.Банк;
	ОбластьМакета1.Параметры.БИКБанкаПолучателя		= ДокументОбъект.Организация.ОсновнойБанковскийСчет.Банк.Код;
	ОбластьМакета1.Параметры.СчетБанкаПолучателя		= ДокументОбъект.Организация.ОсновнойБанковскийСчет.Банк.КоррСчет;
	
	ОбластьМакета1.Параметры.ФИОКлиентаИнициалы = ФамилияИО(Заказчик);
//	ОбластьМакета.Параметры.ФИОКлиентаИнициалы = ФамилияИО(Заказчик);
	
	
	ТабДокумент.Вывести(ОбластьМакета);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ТабДокумент.Вывести(ОбластьМакета1);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ТабДокумент.Вывести(ПечатьСпецификация(СсылкаНаОбъект));
	ТабДокумент.Вывести(ПечатьЗаголовкаДО(СсылкаНаОбъект));
	СуммаДопОборудования = 0;
	Если СсылкаНаОбъект.Товары.Количество() > 0 тогда
		Для каждого СтрокаДО Из СсылкаНаОбъект.Товары Цикл
			ТабДокумент.Вывести(ПечатьСтрокиДО(СсылкаНаОбъект,СтрокаДО));
			СуммаДопОборудования = СуммаДопОборудования + СтрокаДО.СуммаВсего;
		КонецЦикла; 
	иначе
		ТабДокумент.Вывести(ПечатьСтрокиДОПустой(СсылкаНаОбъект));	
	КонецЕсли;
	ТабДокумент.Вывести(ПечатьСтрокиИтогиДО(СсылкаНаОбъект,СтоимостьТоваров));
	
	ТабДокумент.Вывести(ПечатьЗаголовкаРабот(СсылкаНаОбъект));	
	СуммаАвторабот = 0;
	Если ТаблицаАвтомобилей.Количество() > 0 Тогда
		//СписокБазовыхОпций = "";
		
		Для каждого СтрокаАвтомобиль Из ТаблицаАвтомобилей Цикл	
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	ЗаказНарядРаботы.Работа.Ссылка КАК Работа,
			|	ЗаказНарядРаботы.Сумма КАК СуммаВсего
			|ИЗ
			|	Документ.ЗаказНаряд.Работы КАК ЗаказНарядРаботы
			|ГДЕ
			|	ЗаказНарядРаботы.Ссылка.Автомобиль = &Автомобиль
			|	И ЗаказНарядРаботы.Ссылка.ВидРемонта = &ВидРемонта
			|	И ЗаказНарядРаботы.Ссылка.Проведен = ИСТИНА
			|	И ЗаказНарядРаботы.Ссылка.Дата <= &Дата");
			Запрос.УстановитьПараметр("Автомобиль",СтрокаАвтомобиль.Автомобиль);
			Запрос.УстановитьПараметр("ВидРемонта",Справочники.ВидыРемонта.НайтиПоКоду("ЦБ000005"));
			Запрос.УстановитьПараметр("Дата",СсылкаНаОбъект.Дата);
			
			РезультатЗапроса = Запрос.Выполнить().Выгрузить();
			
			Если РезультатЗапроса.Количество() > 0 Тогда
				Для каждого СтрокаРабот Из РезультатЗапроса Цикл
					ТабДокумент.Вывести(ПечатьСтрокиРабот(СсылкаНаОбъект,СтрокаРабот));
					СуммаАвторабот = СуммаАвторабот + СтрокаРабот.СуммаВсего;
				КонецЦикла; 
			иначе
				ТабДокумент.Вывести(ПечатьПустойСтрокиРабот(СсылкаНаОбъект));
			КонецЕсли; 
		КонецЦикла;
	иначе
		ТабДокумент.Вывести(ПечатьПустойСтрокиРабот(СсылкаНаОбъект));	
	КонецЕсли;
	ТабДокумент.Вывести(ПечатьСтрокиИтогиРабот(СсылкаНаОбъект,СтоимостьАвторабот));	
	ТабДокумент.Вывести(ВыводСумм(СсылкаНаОбъект,СуммаАвторабот,СуммаДопОборудования));
	ТабДокумент.Вывести(ПечатьСпецификацияПодвал(СсылкаНаОбъект));	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ТабДокумент.Вывести(ПечатьАктПриемаПередачи(СсылкаНаОбъект));
	
	
	
	ТабДокумент.Защита = обПраво("ЗащитаПечатныхФорм", Права, СсылкаНаОбъект);
	ТабДокумент.ТолькоПросмотр = обПраво("ОткрытиеПечатныхФормДокументовВРежимеПросмотра", Права, СсылкаНаОбъект);
	
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьАктПриемаПередачи(СсылкаНаОбъект) 
	ДокументОбъект = СсылкаНаОбъект.ПолучитьОбъект();
	//валюта печати
	ВалютаПечатногоДокумента = зфВыборВалютыПечатногоДокумента(ДокументОбъект);
	Если ВалютаПечатногоДокумента = Неопределено Тогда Возврат Неопределено; КонецЕсли;
	
	//НомерДляПечати = дкПолучитьНомерДляПечати(СсылкаНаОбъект);
	НомерДляПечати = СокрЛП(СсылкаНаОбъект.ДоговорВзаиморасчетов.НомерДоговора);
	Дата = СсылкаНаОбъект.Дата;
	Заказчик = СсылкаНаОбъект.Заказчик;
	Организация = СсылкаНаОбъект.Организация;
	
	
	
	//макет
	Макет = ПолучитьМакет("АктПриемаПередачи");
	//заголовок документа
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	
	Если ЗначениеЗаполнено(НомерДляПечати) Тогда
		ОбластьМакета.Параметры.НомерДоговора = НомерДляПечати;
	Иначе
		ОбластьМакета.Параметры.НомерДоговора = "________";
	КонецЕсли;
	
	ОбластьМакета.Параметры.ДатаДоговора = Формат(Дата,"ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры.Дата = Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy");
	
	ОбластьМакета.Параметры.ЭкологическийКлассДвигателяПТС = "Евро-5";
	
	ОбластьМакета.Параметры.ПредставлениеОрганизацииПолное = спПолучитьНаименование(Организация);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = Организация.Наименование;	
	ОбластьМакета.Параметры.ФирмаАдрес = киПолучитьПредставлениеКИ(Организация,Справочники.ВидыКонтактнойИнформации.АдресЮридический);
	
	Руководитель = дкОтветственноеЛицо(ДокументОбъект,Перечисления.ВидыОбъектовСведений.Руководитель);
	РуководительРП = СокрЛП(обПолучитьЗначениеСвойства(СсылкаНаОбъект.Организация, "Директор в договоре"));
	ОбластьМакета.Параметры.РуководительПредставлениеРП = РуководительРП;	//Дегтярева Владимира Александровича
	ОбластьМакета.Параметры.РуководительФамилияИнициалы = ФамилияИОотСтроки(Руководитель.РуководительПредставление);	//"Дегтярев В.А."
	//ОбластьМакета.Параметры.ФирмаТелефоны = киПолучитьПредставлениеКИ(Организация,Справочники.ВидыКонтактнойИнформации.ТелефонРабочий);
	
	ОбластьМакета.Параметры.ЗаказчикПолноеНаименование = спПолучитьНаименование(Заказчик);
	
	Адрес = киПолучитьПредставлениеКИ(Заказчик,Справочники.ВидыКонтактнойИнформации.АдресПочтовый);
	
	Если Не ЗначениеЗаполнено(Адрес) Тогда
		Адрес = киПолучитьПредставлениеКИ(Заказчик,Справочники.ВидыКонтактнойИнформации.АдресФактический);
	КонецЕсли;
	Если ЗначениеЗаполнено(Адрес) Тогда
		ОбластьМакета.Параметры.ЗаказчикПочтовыйАдрес = Адрес;
	Иначе
		ОбластьМакета.Параметры.ЗаказчикПочтовыйАдрес = "________________________________";
	КонецЕсли;	
	Тел = киПолучитьПредставлениеКИ(Заказчик,Справочники.ВидыКонтактнойИнформации.ТелефонКонтактный);
	Если Не ЗначениеЗаполнено(Тел) Тогда
		Тел = киПолучитьПредставлениеКИ(Заказчик,Справочники.ВидыКонтактнойИнформации.ТелефонСотовый);
	КонецЕсли;
	Если ЗначениеЗаполнено(Тел) Тогда
		ОбластьМакета.Параметры.ЗаказчикТелефоны = Тел;
	Иначе
		ОбластьМакета.Параметры.ЗаказчикТелефоны = "_________________";
	КонецЕсли;	
	
	ЗаказчикДатаРождения = Формат(Заказчик.ДатаРождения,"ДФ=dd.MM.yyyy");
	Если ЗначениеЗаполнено(ЗаказчикДатаРождения) Тогда
		ОбластьМакета.Параметры.ЗаказчикДатаРождения = ЗаказчикДатаРождения;	
	Иначе
		ОбластьМакета.Параметры.ЗаказчикДатаРождения = "_____________";	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПодтверждающиеДокументы.Ссылка КАК Документ,
	|	ПодтверждающиеДокументы.КемВыдан КАК ДокументКемВыдан,
	|	ПодтверждающиеДокументы.ДатаВыдачи КАК ДокументДатаВыдачи,
	|	ПодтверждающиеДокументы.ВидПодтверждающегоДокумента КАК ВидДокумента,
	|	ПодтверждающиеДокументы.Серия КАК Серия,
	|	ПодтверждающиеДокументы.Номер КАК Номер
	|ИЗ
	|	Справочник.ПодтверждающиеДокументы КАК ПодтверждающиеДокументы
	|ГДЕ
	|	ПодтверждающиеДокументы.Владелец = &Владелец
	|	И ПодтверждающиеДокументы.Текущий = ИСТИНА";
	Запрос.УстановитьПараметр("Владелец", Заказчик);		
	ВыборкаДокументов = Запрос.Выполнить().Выбрать();
	Если ВыборкаДокументов.Количество()=0 Тогда
		ОбластьМакета.Параметры.ЗаказчикДокументСерия = "_______";
		ОбластьМакета.Параметры.ЗаказчикДокументНомер = "__________";
		ОбластьМакета.Параметры.ЗаказчикДокументКемВыдан = "__________________________";
		ОбластьМакета.Параметры.ЗаказчикДокументДатаВыдачи = "___________";
		//ОбластьМакета.Параметры.ЗаказчикДокументКодПодразделения = "________";
	Иначе 
		ВыборкаДокументов.Следующий();
		ОбластьМакета.Параметры.ЗаказчикДокументСерия = СокрЛП(ВыборкаДокументов.Серия);
		ОбластьМакета.Параметры.ЗаказчикДокументНомер = СокрЛП(ВыборкаДокументов.Номер);
		ОбластьМакета.Параметры.ЗаказчикДокументКемВыдан = СокрЛП(ВыборкаДокументов.ДокументКемВыдан);
		ОбластьМакета.Параметры.ЗаказчикДокументДатаВыдачи = Формат(ВыборкаДокументов.ДокументДатаВыдачи,"ДЛФ=ДД");
		//ОбластьМакета.Параметры.ЗаказчикДокументКодПодразделения = "________";
	КонецЕсли;
	
	ТаблицаАвтомобилей = СсылкаНаОбъект.Автомобили.Выгрузить();
	ТаблицаТоваров = СсылкаНаОбъект.Товары.Выгрузить();
	Если ТаблицаАвтомобилей.Количество() > 0 Тогда
		//СписокБазовыхОпций = "";
		Для каждого СтрокаАвтомобиль Из ТаблицаАвтомобилей Цикл
			Автомобиль = СтрокаАвтомобиль.Автомобиль;
			Марка = СокрЛП(обПолучитьЗначениеСвойства(Автомобиль, "Марка"));
			Если ЗначениеЗаполнено(Марка) и Марка<>"" Тогда
				ОбластьМакета.Параметры.Марка=Марка;	
			Иначе
				ОбластьМакета.Параметры.Марка=СокрЛП(Автомобиль.Модель.Родитель);
			КонецЕсли;
			Модель = СокрЛП(Автомобиль.Модель);
			Если ЗначениеЗаполнено(Модель) и Модель<>"" Тогда
				ОбластьМакета.Параметры.Модель = Модель;
			Иначе
				ОбластьМакета.Параметры.Модель = "__________________";
			КонецЕсли;
			//ОбластьМакета.Параметры.КодМодели = СокрЛП(Автомобиль.Модель.Код);
			ОбластьМакета.Параметры.Версия = СокрЛП(Автомобиль.ВариантКомплектации);
			//ОбластьМакета.Параметры.КодВерсии = СокрЛП(Автомобиль.ВариантКомплектации.Код);
			ОбластьМакета.Параметры.VIN = СокрЛП(Автомобиль.VIN);
			ОбластьМакета.Параметры.ГодВыпуска = Формат(Автомобиль.ГодВыпуска, "ДФ = гггг");
			//ОбластьМакета.Параметры.МодельДвигателяПТС = СокрЛП(СсылкаНаОбъект.Автомобиль.ТипДвигателя);
			ОбластьМакета.Параметры.НомерДвигателяПТС = СокрЛП(Автомобиль.НомерДвигателя);
			ОбластьМакета.Параметры.НомерШассиПТС = СокрЛП(Автомобиль.НомерШасси);
			ОбластьМакета.Параметры.НомерКузоваПТС = СокрЛП(Автомобиль.НомерКузова);
			ОбластьМакета.Параметры.ЦветКузоваПТС = СокрЛП(Автомобиль.Цвет);
			//ОбластьМакета.Параметры.КатегорияПТС = Лев(СокрЛП(Автомобиль.Модель.КатегорияТСКОДД),1);
			
			//Если ЗначениеЗаполнено(Автомобиль.ВариантКомплектации) Тогда
			//	ОбластьМакета.Параметры.ТипКузоваТС = СокрЛП(Автомобиль.ВариантКомплектации.ТипКузова);
			//	ОбластьМакета.Параметры.РабочийОбъемДвигателяПТС = ?(Автомобиль.ВариантКомплектации.ТипДвигателя.ОбъемДвигателя = 0, "", Автомобиль.ВариантКомплектации.ТипДвигателя.ОбъемДвигателя*1000); 
			//	ОбластьМакета.Параметры.ТипДвигателяПТС = СокрЛП(Автомобиль.ВариантКомплектации.ТипДвигателя);	
			//	ОбластьМакета.Параметры.МощностьДвигателяПТС = ?(обПолучитьЗначениеСвойства(Автомобиль.ВариантКомплектации.ТипДвигателя, "Мощность двигателя") = 0, "", СокрЛП(обПолучитьЗначениеСвойства(Автомобиль.ВариантКомплектации.ТипДвигателя, "Мощность двигателя")));
			//Иначе
			//	ОбластьМакета.Параметры.ТипКузоваТС = СокрЛП(Автомобиль.ТипКузова);
			//	ОбластьМакета.Параметры.РабочийОбъемДвигателяПТС = ?(Автомобиль.ТипДвигателя.ОбъемДвигателя = 0, "", Автомобиль.ТипДвигателя.ОбъемДвигателя*1000); 
			//	ОбластьМакета.Параметры.ТипДвигателяПТС = СокрЛП(Автомобиль.ТипДвигателя);
			//	ОбластьМакета.Параметры.МощностьДвигателяПТС = ?(обПолучитьЗначениеСвойства(Автомобиль.ТипДвигателя, "Мощность двигателя") = 0, "", СокрЛП(обПолучитьЗначениеСвойства(Автомобиль.ТипДвигателя, "Мощность двигателя")));
			//КонецЕсли;
			
			
			
			//ОбластьМакета.Параметры.РазрешеннаяМаксимальнаяМассаПТС = ?(обПолучитьЗначениеСвойства(Автомобиль.Модель, "Масса без нагрузки (кг)") = 0, "", СокрЛП(обПолучитьЗначениеСвойства(Автомобиль.Модель, "Масса без нагрузки (кг)")));
			//ОбластьМакета.Параметры.МассаБезНагрузкиПТС = ?(обПолучитьЗначениеСвойства(Автомобиль.Модель, "Разрешенная максимальная масса (кг)") = 0, "", СокрЛП(обПолучитьЗначениеСвойства(Автомобиль.Модель, "Разрешенная максимальная масса (кг)")));
			//ОрганизацияИзготовительПТС = СокрЛП(Автомобиль.Модель.Производитель);
			//Если ЗначениеЗаполнено(ОрганизацияИзготовительПТС) и ОрганизацияИзготовительПТС<>"" Тогда
			//	ОбластьМакета.Параметры.ОрганизацияИзготовительПТС = ОрганизацияИзготовительПТС;	
			//Иначе
			//	ОбластьМакета.Параметры.ОрганизацияИзготовительПТС = СокрЛП(Автомобиль.Модель.Поставщик);
			//КонецЕсли;
			
			//ОбластьМакета.Параметры.ОрганизацияИзготовительПТС = СокрЛП(Автомобиль.Модель.Поставщик);
			
			
			ПТС =  спПолучитьПодтверждающийДокументОбъектаПоВиду(Автомобиль, Перечисления.ВидыДокументов.ПТС);
			Если ЗначениеЗаполнено(ПТС) Тогда
				ОбластьМакета.Параметры.ПТС = ПТС;
				ОбластьМакета.Параметры.ПТСКемВыдан = ПТС.КемВыдан;
			Иначе
				ОбластьМакета.Параметры.ПТС = "Отсутствует";
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	ОбластьМакета.Параметры.ИННКПП 					= СокрЛП(Организация.ИНН) + "/" + СокрЛП(Организация.КПП);
	ОбластьМакета.Параметры.НомерСчетаПолучателя	= ДокументОбъект.Организация.ОсновнойБанковскийСчет.НомерСчета;
	ОбластьМакета.Параметры.БанкПолучателя			= ДокументОбъект.Организация.ОсновнойБанковскийСчет.Банк;
	ОбластьМакета.Параметры.БИКБанкаПолучателя		= ДокументОбъект.Организация.ОсновнойБанковскийСчет.Банк.Код;
	ОбластьМакета.Параметры.СчетБанкаПолучателя		= ДокументОбъект.Организация.ОсновнойБанковскийСчет.Банк.КоррСчет;
	
	ОбластьМакета.Параметры.ФИОКлиентаИнициалы = ФамилияИО(Заказчик);
	
	//ТабДокумент.Вывести(ОбластьМакета);
	
	
	//ТабДокумент.Защита = обПраво("ЗащитаПечатныхФорм", Права, СсылкаНаОбъект);
	//ТабДокумент.ТолькоПросмотр = обПраво("ОткрытиеПечатныхФормДокументовВРежимеПросмотра", Права, СсылкаНаОбъект);
	
	
	Возврат ОбластьМакета;
КонецФункции

Функция ПечатьСпецификация(СсылкаНаОбъект) 
	ДокументОбъект = СсылкаНаОбъект.ПолучитьОбъект();
	
	ТабДокумент = Новый ТабличныйДокумент;
	//валюта печати
	ВалютаПечатногоДокумента = зфВыборВалютыПечатногоДокумента(ДокументОбъект);
	Если ВалютаПечатногоДокумента = Неопределено Тогда Возврат Неопределено; КонецЕсли;
	
	//НомерДляПечати = дкПолучитьНомерДляПечати(СсылкаНаОбъект);
	НомерДляПечати = СокрЛП(СсылкаНаОбъект.ДоговорВзаиморасчетов.НомерДоговора);
	Дата = СсылкаНаОбъект.Дата;
	Заказчик = СсылкаНаОбъект.Заказчик;
	Организация = СсылкаНаОбъект.Организация;
	
	
	
	//макет
	Макет = ПолучитьМакет("Спецификация");
	//заголовок документа
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	
	ОбластьМакета.Параметры.НомерДоговора = НомерДляПечати; 
	ОбластьМакета.Параметры.ДатаДоговора = Дата;
	
	ТаблицаАвтомобилей = СсылкаНаОбъект.Автомобили.Выгрузить();
	ТаблицаТоваров = СсылкаНаОбъект.Товары.Выгрузить();
	Если ТаблицаАвтомобилей.Количество() > 0 Тогда
		//СписокБазовыхОпций = "";
		Для каждого СтрокаАвтомобиль Из ТаблицаАвтомобилей Цикл
			Автомобиль = СтрокаАвтомобиль.Автомобиль;
			Марка = СокрЛП(обПолучитьЗначениеСвойства(Автомобиль, "Марка"));
			Если ЗначениеЗаполнено(Марка) и Марка<>"" Тогда
				ОбластьМакета.Параметры.Марка = Марка;
			Иначе 
				ОбластьМакета.Параметры.Марка = СокрЛП(Автомобиль.Модель.Родитель);
			КонецЕсли;

			ОбластьМакета.Параметры.Модель = СокрЛП(Автомобиль.Модель);
			ОбластьМакета.Параметры.Версия = СокрЛП(Автомобиль.ВариантКомплектации);
			ОбластьМакета.Параметры.ГодВыпуска = Формат(Автомобиль.ГодВыпуска, "ДФ = гггг");
			ОбластьМакета.Параметры.ЦветКузоваПТС = СокрЛП(Автомобиль.Цвет);
			ОбластьМакета.Параметры.VIN = СокрЛП(Автомобиль.VIN);
			ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
			
			
			СуммаВсегоНаАвтомобиль = СтрокаАвтомобиль.СуммаВсего;
			СуммаВсегоНаАвтомобиль = СуммаВсегоНаАвтомобиль + ТаблицаТоваров.Итог("СуммаВсего");
			//СуммаВсегоНаАвтомобиль = СуммаВсегоНаАвтомобиль + СсылкаНаОбъект.Опции.Итог("СуммаВсего") + СсылкаНаОбъект.Товары.Итог("СуммаВсего");
			СуммаВсегоНаАвтомобильПечать = обПересчет(СуммаВсегоНаАвтомобиль,ВалютаДокумента,Дата,ВалютаПечатногоДокумента,Дата,РежимОкругления.Окр15как20);
			
			СуммаНДСНаАвтомобиль = СтрокаАвтомобиль.СуммаНДС;
			СуммаНДСНаАвтомобиль = СуммаНДСНаАвтомобиль + ТаблицаТоваров.Итог("СуммаНДС");
			//СуммаНДСНаАвтомобиль = СуммаНДСНаАвтомобиль + СсылкаНаОбъект.Опции.Итог("СуммаНДС") + СсылкаНаОбъект.Товары.Итог("СуммаНДС");	
			СуммаНДСНаАвтомобильПечать = обПересчет(СуммаНДСНаАвтомобиль,ВалютаДокумента,Дата,ВалютаПечатногоДокумента,Дата,РежимОкругления.Окр15как20);		
			
			//ОбластьМакета.Параметры.ФИОКлиентаИнициалы = ФамилияИО(Заказчик);
			
			//------------ОПЦИИ-----------------------
			ВариантКомплектации = Автомобиль.ВариантКомплектации;
			
			//ТаблицаБазовыхОпций
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ОпцииВариантовКомплектации.Опция КАК Опция
			|ИЗ
			|	РегистрСведений.ОпцииВариантовКомплектации КАК ОпцииВариантовКомплектации
			|ГДЕ
			|	ОпцииВариантовКомплектации.ВариантКомплектации = &ВариантКомплектации
			|	И ОпцииВариантовКомплектации.ВидВключения = &ВидВключения";
			Запрос.УстановитьПараметр("ВариантКомплектации", ВариантКомплектации);
			Запрос.УстановитьПараметр("ВидВключения", 2);
			ТаблицаБазовыхОпций = Запрос.Выполнить().Выгрузить();
			
			//ТаблицаДополнительныхОпций
			//Запрос = Новый Запрос;
			//Запрос.Текст = "ВЫБРАТЬ
			//|	ОпцииВариантовКомплектации.Опция КАК Опция
			//|ИЗ
			//|	РегистрСведений.ОпцииВариантовКомплектации КАК ОпцииВариантовКомплектации
			//|ГДЕ
			//|	ОпцииВариантовКомплектации.ВариантКомплектации = &ВариантКомплектации
			//|	И ОпцииВариантовКомплектации.ВидВключения = &ВидВключения";
			//Запрос.УстановитьПараметр("ВариантКомплектации", ВариантКомплектации);
			//Запрос.УстановитьПараметр("ВидВключения", 1);
			//ТаблицаДополнительныхОпций = Запрос.Выполнить().Выгрузить();
			
			////ТаблицаОпцийДилера
			//Запрос = Новый Запрос;
			//Запрос.Текст = "ВЫБРАТЬ
			//|	ОпцииВариантовКомплектации.Опция КАК Опция
			//|ИЗ
			//|	РегистрСведений.ОпцииВариантовКомплектации КАК ОпцииВариантовКомплектации
			//|ГДЕ
			//|	ОпцииВариантовКомплектации.ВариантКомплектации = &ВариантКомплектации
			//|	И ОпцииВариантовКомплектации.ВидВключения = &ВидВключения";
			//Запрос.УстановитьПараметр("ВариантКомплектации", ВариантКомплектации);
			//Запрос.УстановитьПараметр("ВидВключения", 0);
			//ТаблицаОпцийДилера = Запрос.Выполнить().Выгрузить();
			
			
			ТаблицаОпцийДилера = СсылкаНаОбъект.Товары.Выгрузить();	
			
			СписокБазовыхОпций = "";
			Если ТаблицаБазовыхОпций.Количество() > 0 Тогда
				//СписокБазовыхОпций = "";
				Для каждого СтрокаБазовыхОпций Из ТаблицаБазовыхОпций Цикл
					Если ПустаяСтрока(СписокБазовыхОпций) Тогда
						СписокБазовыхОпций = СокрЛП(спПолучитьНаименование(СтрокаБазовыхОпций.Опция));
					Иначе
						СписокБазовыхОпций = СписокБазовыхОпций + ", " + СокрЛП(спПолучитьНаименование(СтрокаБазовыхОпций.Опция));
					КонецЕсли
				КонецЦикла;
				ОбластьМакета.Параметры.СписокБазовыхОпций = СписокБазовыхОпций; 
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаАвтомобиль.ЗаказНаАвтомобиль) Тогда
				ТаблицаДополнительныхОпций = СтрокаАвтомобиль.ЗаказНаАвтомобиль.Опции.Выгрузить();
				
				Если ТаблицаДополнительныхОпций.Количество() > 0 Тогда
					СписокДополнительныхОпций = "";
					Для каждого СтрокаДополнительныхОпций Из ТаблицаДополнительныхОпций Цикл
						Если ПустаяСтрока(СписокДополнительныхОпций) Тогда
							СписокДополнительныхОпций = СокрЛП(спПолучитьНаименование(СтрокаДополнительныхОпций.Опция));
						Иначе
							СписокДополнительныхОпций = СписокДополнительныхОпций + ", " + СокрЛП(спПолучитьНаименование(СтрокаДополнительныхОпций.Опция));
						КонецЕсли
						
					КонецЦикла;
					ОбластьМакета.Параметры.СписокДополнительныхОпций = СписокДополнительныхОпций;
				КонецЕсли;
			КонецЕсли;
			
			Если ТаблицаОпцийДилера.Количество() > 0 Тогда
				СписокОпцийДилера = "";
				Для каждого СтрокаОпцийДилера Из ТаблицаОпцийДилера Цикл
					Если ПустаяСтрока(СписокОпцийДилера) Тогда
						СписокОпцийДилера = СокрЛП(спПолучитьНаименование(СтрокаОпцийДилера.Номенклатура));
					Иначе
						СписокОпцийДилера = СписокОпцийДилера + ", " + СокрЛП(спПолучитьНаименование(СтрокаОпцийДилера.Номенклатура));
					КонецЕсли
					
				КонецЦикла;
				//ОбластьМакета.Параметры.СписокОпцийДилера = СписокОпцийДилера;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	
	//----------------------------------------
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	
	ТабДокумент.Защита = обПраво("ЗащитаПечатныхФорм", Права, СсылкаНаОбъект);
	ТабДокумент.ТолькоПросмотр = обПраво("ОткрытиеПечатныхФормДокументовВРежимеПросмотра", Права, СсылкаНаОбъект);
	
	
	Возврат ОбластьМакета;
КонецФункции

Функция ПечатьСпецификацияПодвал(СсылкаНаОбъект)
	ДокументОбъект = СсылкаНаОбъект.ПолучитьОбъект();
	//макет
	Макет = ПолучитьМакет("Спецификация");
	//заголовок документа
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	НомерДляПечати = СокрЛП(СсылкаНаОбъект.ДоговорВзаиморасчетов.НомерДоговора);
	Дата = СсылкаНаОбъект.Дата;
	Заказчик = СсылкаНаОбъект.Заказчик;
	Организация = СсылкаНаОбъект.Организация;
	
	//	ОбластьМакета.Параметры.ПредставлениеОрганизацииПолное = спПолучитьНаименование(Организация);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = Организация.Наименование;	
	ОбластьМакета.Параметры.ФирмаАдрес = киПолучитьПредставлениеКИ(Организация,Справочники.ВидыКонтактнойИнформации.АдресЮридический);
	
	Руководитель = дкОтветственноеЛицо(ДокументОбъект,Перечисления.ВидыОбъектовСведений.Руководитель);
	РуководительРП = СокрЛП(обПолучитьЗначениеСвойства(СсылкаНаОбъект.Организация, "Директор в договоре"));
	//	ОбластьМакета.Параметры.РуководительПредставлениеРП = РуководительРП;	//Дегтярева Владимира Александровича
	ОбластьМакета.Параметры.РуководительФамилияИнициалы = ФамилияИОотСтроки(Руководитель.РуководительПредставление);	//"Дегтярев В.А."
	//ОбластьМакета.Параметры.ФирмаТелефоны = киПолучитьПредставлениеКИ(Организация,Справочники.ВидыКонтактнойИнформации.ТелефонРабочий);
	
	ОсновнойПоставщик = СтрЗаменить(спПолучитьНаименование(обПраво("ОсновнойПоставщик", Права, СсылкаНаОбъект)), "Общество с ограниченной ответственностью","ООО");
	//	ОбластьМакета.Параметры.ОсновнойПоставщик = ОсновнойПоставщик;
	
	ОбластьМакета.Параметры.ЗаказчикПолноеНаименование = спПолучитьНаименование(Заказчик);
	
	Адрес = киПолучитьПредставлениеКИ(Заказчик,Справочники.ВидыКонтактнойИнформации.АдресПочтовый);
	
	Если Не ЗначениеЗаполнено(Адрес) Тогда
		Адрес = киПолучитьПредставлениеКИ(Заказчик,Справочники.ВидыКонтактнойИнформации.АдресФактический);
	КонецЕсли;
	Если ЗначениеЗаполнено(Адрес) Тогда
		ОбластьМакета.Параметры.ЗаказчикПочтовыйАдрес = Адрес;
	Иначе
		ОбластьМакета.Параметры.ЗаказчикПочтовыйАдрес = "________________________________";
	КонецЕсли;	
	Тел = киПолучитьПредставлениеКИ(Заказчик,Справочники.ВидыКонтактнойИнформации.ТелефонКонтактный);
	Если Не ЗначениеЗаполнено(Тел) Тогда
		Тел = киПолучитьПредставлениеКИ(Заказчик,Справочники.ВидыКонтактнойИнформации.ТелефонСотовый);
	КонецЕсли;
	Если ЗначениеЗаполнено(Тел) Тогда
		ОбластьМакета.Параметры.ЗаказчикТелефоны = Тел;
	Иначе
		ОбластьМакета.Параметры.ЗаказчикТелефоны = "_________________";
	КонецЕсли;	
	
	ЗаказчикДатаРождения = Формат(Заказчик.ДатаРождения,"ДФ=dd.MM.yyyy");
	Если ЗначениеЗаполнено(ЗаказчикДатаРождения) Тогда
		ОбластьМакета.Параметры.ЗаказчикДатаРождения = ЗаказчикДатаРождения;	
	Иначе
		ОбластьМакета.Параметры.ЗаказчикДатаРождения = "_____________";	
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПодтверждающиеДокументы.Ссылка КАК Документ,
	|	ПодтверждающиеДокументы.КемВыдан КАК ДокументКемВыдан,
	|	ПодтверждающиеДокументы.ДатаВыдачи КАК ДокументДатаВыдачи,
	|	ПодтверждающиеДокументы.ВидПодтверждающегоДокумента КАК ВидДокумента,
	|	ПодтверждающиеДокументы.Серия КАК Серия,
	|	ПодтверждающиеДокументы.Номер КАК Номер
	|ИЗ
	|	Справочник.ПодтверждающиеДокументы КАК ПодтверждающиеДокументы
	|ГДЕ
	|	ПодтверждающиеДокументы.Владелец = &Владелец
	|	И ПодтверждающиеДокументы.Текущий = ИСТИНА";
	Запрос.УстановитьПараметр("Владелец", Заказчик);		
	ВыборкаДокументов = Запрос.Выполнить().Выбрать();
	Если ВыборкаДокументов.Количество()=0 Тогда
		ОбластьМакета.Параметры.ЗаказчикДокументСерия = "_______";
		ОбластьМакета.Параметры.ЗаказчикДокументНомер = "__________";
		ОбластьМакета.Параметры.ЗаказчикДокументКемВыдан = "__________________________";
		ОбластьМакета.Параметры.ЗаказчикДокументДатаВыдачи = "___________";
		//ОбластьМакета.Параметры.ЗаказчикДокументКодПодразделения = "________";
	Иначе 
		ВыборкаДокументов.Следующий();
		ОбластьМакета.Параметры.ЗаказчикДокументСерия = СокрЛП(ВыборкаДокументов.Серия);
		ОбластьМакета.Параметры.ЗаказчикДокументНомер = СокрЛП(ВыборкаДокументов.Номер);
		ОбластьМакета.Параметры.ЗаказчикДокументКемВыдан = СокрЛП(ВыборкаДокументов.ДокументКемВыдан);
		ОбластьМакета.Параметры.ЗаказчикДокументДатаВыдачи = Формат(ВыборкаДокументов.ДокументДатаВыдачи,"ДЛФ=ДД");
		//ОбластьМакета.Параметры.ЗаказчикДокументКодПодразделения = "________";
	КонецЕсли;
	
	ОбластьМакета.Параметры.ИННКПП 					= СокрЛП(Организация.ИНН) + "/" + СокрЛП(Организация.КПП);
	ОбластьМакета.Параметры.НомерСчетаПолучателя	= ДокументОбъект.Организация.ОсновнойБанковскийСчет.НомерСчета;
	ОбластьМакета.Параметры.БанкПолучателя			= ДокументОбъект.Организация.ОсновнойБанковскийСчет.Банк;
	ОбластьМакета.Параметры.БИКБанкаПолучателя		= ДокументОбъект.Организация.ОсновнойБанковскийСчет.Банк.Код;
	ОбластьМакета.Параметры.СчетБанкаПолучателя		= ДокументОбъект.Организация.ОсновнойБанковскийСчет.Банк.КоррСчет;
	
	ОбластьМакета.Параметры.ФИОКлиентаИнициалы = ФамилияИО(Заказчик);
	
	Возврат ОбластьМакета;	
КонецФункции

Функция ПечатьЗаголовкаДО(СсылкаНаОбъект)
	//макет
	Макет = ПолучитьМакет("Спецификация");
	//заголовок документа
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДО");
	Возврат ОбластьМакета;	
КонецФункции

Функция ПечатьСтрокиДО(СсылкаНаОбъект,СтрокаДО)
	//макет
	Макет = ПолучитьМакет("Спецификация");
	//заголовок документа
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаДО");
	ОбластьМакета.Параметры.Номенклатура = СтрокаДО.Номенклатура;
	ОбластьМакета.Параметры.Цена =  СтрокаДО.СуммаВсего;
	Возврат ОбластьМакета;	
КонецФункции

Функция ПечатьСтрокиДОПустой(СсылкаНаОбъект)
	//макет
	Макет = ПолучитьМакет("Спецификация");
	//заголовок документа
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаДО");
	Возврат ОбластьМакета;	
КонецФункции


Функция ПечатьЗаголовкаРабот(СсылкаНаОбъект)
	//макет
	Макет = ПолучитьМакет("Спецификация");
	//заголовок документа
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокРабот");
	Возврат ОбластьМакета;	
КонецФункции

Функция ПечатьСтрокиРабот(СсылкаНаОбъект,СтрокаДО)
	//макет
	Макет = ПолучитьМакет("Спецификация");
	//заголовок документа
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаРабот");
	ОбластьМакета.Параметры.Авторабота = СтрокаДО.Работа;
	ОбластьМакета.Параметры.Цена =  СтрокаДО.СуммаВсего;
	Возврат ОбластьМакета;	
КонецФункции

Функция ПечатьПустойСтрокиРабот(СсылкаНаОбъект)
	//макет
	Макет = ПолучитьМакет("Спецификация");
	//заголовок документа
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаРабот");
	Возврат ОбластьМакета;	
КонецФункции

Функция ВыводСумм(СсылкаНаОбъект,СуммаАвторабот,СуммаДопОборудования)
	//макет
	Макет = ПолучитьМакет("Спецификация");
	//заголовок документа
	ОбластьМакета = Макет.ПолучитьОбласть("ИтогСуммы");
    ДокументОбъект = СсылкаНаОбъект.ПолучитьОбъект();
	ВалютаПечатногоДокумента = зфВыборВалютыПечатногоДокумента(ДокументОбъект);
	
	ВалютаДокумента = СсылкаНаОбъект.ВалютаДокумента;
	ЦенаАвтоЧисло = Число(ЦенаАвто);
	ОбщаяСтоимостьАвтомобиля = ЦенаАвтоЧисло +  СуммаАвторабот + СуммаДопОборудования;
//	СуммаВсегоНаАвтомобиль = СуммаВсегоНаАвтомобиль + СсылкаНаОбъект.Опции.Итог("СуммаВсего") + СсылкаНаОбъект.Товары.Итог("СуммаВсего");
	СуммаВсегоНаАвтомобильПечать = обПересчет(ОбщаяСтоимостьАвтомобиля,ВалютаДокумента,СсылкаНаОбъект.Дата,ВалютаПечатногоДокумента,СсылкаНаОбъект.Дата,РежимОкругления.Окр15как20);
//	ОбластьМакета.Параметры.СуммаРуб 		= ТолькоРуб(СуммаВсегоНаАвтомобильПечать);
//	ОбластьМакета.Параметры.СуммаКоп 		= ТолькоКоп(СуммаВсегоНаАвтомобильПечать);
//	ОбластьМакета.Параметры.СуммаПрописью 	= обЧислоПрописью(СуммаВсегоНаАвтомобильПечать,ВалютаПечатногоДокумента);
	
	//СуммаНДСНаАвтомобиль = СтрокаАвтомобиль.СуммаНДС;
	//СуммаНДСНаАвтомобиль = СуммаНДСНаАвтомобиль + ТаблицаТоваров.Итог("СуммаНДС");
	////СуммаНДСНаАвтомобиль = СуммаНДСНаАвтомобиль + СсылкаНаОбъект.Опции.Итог("СуммаНДС") + СсылкаНаОбъект.Товары.Итог("СуммаНДС");	
	//СуммаНДСНаАвтомобильПечать = обПересчет(СуммаНДСНаАвтомобиль,ВалютаДокумента,Дата,ВалютаПечатногоДокумента,Дата,РежимОкругления.Окр15как20);
	//ОбластьМакета.Параметры.СуммаНДСруб 		= ТолькоРуб(СуммаНДСНаАвтомобильПечать);
	//ОбластьМакета.Параметры.СуммаНДСкоп 		= ТолькоКоп(СуммаНДСНаАвтомобильПечать);	
	//ОбластьМакета.Параметры.СуммаНДСПрописью 	= обЧислоПрописью(СуммаНДСНаАвтомобильПечать,ВалютаПечатногоДокумента);	
	СуммаВсегоДопОбПечать = обПересчет(СуммаДопОборудования,ВалютаДокумента,СсылкаНаОбъект.Дата,ВалютаПечатногоДокумента,СсылкаНаОбъект.Дата,РежимОкругления.Окр15как20);
    СуммаВсегоАтоработПечать = обПересчет(СуммаАвторабот,ВалютаДокумента,СсылкаНаОбъект.Дата,ВалютаПечатногоДокумента,СсылкаНаОбъект.Дата,РежимОкругления.Окр15как20);	
	ОбластьМакета.Параметры.СуммаАвторабот =  ТолькоРуб(СуммаВсегоАтоработПечать);
	ОбластьМакета.Параметры.СтоимостьДопОб =  ТолькоРуб(СуммаВсегоДопОбПечать);
	ОбластьМакета.Параметры.СуммаАвтоработКоп =  ТолькоКоп(СуммаВсегоАтоработПечать);
	ОбластьМакета.Параметры.СтоимостьДопОбКоп =  ТолькоКоп(СуммаВсегоДопОбПечать);

	ЦенаАвто = СсылкаНаОбъект.СуммаДокумента;
	ОбластьМакета.Параметры.ЦенаАвто = Число(ЦенаАвто);
	ОбластьМакета.Параметры.ЦенаАвтоПрописью = обЧислоПрописью(Число(ЦенаАвто),ВалютаПечатногоДокумента);	
	Возврат ОбластьМакета;	
КонецФункции

Функция ПечатьСтрокиИтогиДО(СсылкаНаОбъект,Сумма)
	//макет
	Макет = ПолучитьМакет("Спецификация");
	//заголовок документа
	ОбластьМакета = Макет.ПолучитьОбласть("ИтогДО");
	ОбластьМакета.Параметры.Цена =  Сумма;
	Возврат ОбластьМакета;	
КонецФункции

Функция ПечатьСтрокиИтогиРабот(СсылкаНаОбъект,Сумма)
	//макет
	Макет = ПолучитьМакет("Спецификация");
	//заголовок документа
	ОбластьМакета = Макет.ПолучитьОбласть("ИтогРабот");
	ОбластьМакета.Параметры.Цена =  Сумма;
	Возврат ОбластьМакета;	
КонецФункции




Права = Неопределено;
Права = глПрава;
